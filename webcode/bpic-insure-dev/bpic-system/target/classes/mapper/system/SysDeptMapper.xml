<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpic.system.mapper.SysDeptMapper">

	<resultMap type="SysDept" id="SysDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="selectDeptVo">
        select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time
        from sys_dept d
    </sql>

	<select id="selectOwnDeptList"  resultType="com.bpic.common.core.domain.entity.TdepartmentSales">
		select * from t_department_sales t where t.c_state='1'
	</select>

	<select id="selectChildDeptList" parameterType="String" resultType="com.bpic.system.domain.vo.DeptVo">
		select t.c_dpt_abr,t.c_dpt_cde from t_department_sales t where t.c_state='1' and t.c_snr_dpt=#{deptId}
	</select>

	<select id="selectDeptList"  resultType="com.bpic.common.core.domain.entity.TdepartmentSales">
        select * from t_department_sales t
        where t.c_state = '1'
        <if test="roleId != 1">
			and t.c_dpt_cde in (select s.dept_id from sys_role_dept s where s.role_id=#{roleId})
        </if>
        <if test="parentId != null and parentId != 0">
			AND t.c_snr_dpt = #{parentId}
		</if>
		<if test="deptName != null and deptName != ''">
			AND t.c_dpt_cnm like concat('%', #{deptName}, '%')
		</if>
<!--		<if test="status != null and status != ''">-->
<!--			AND t.c_state = #{status}-->
<!--		</if>-->
		<!-- 数据范围过滤 -->
		${params.dataScope}
<!--		order by d.parent_id, d.order_num-->
    </select>
    
    <select id="selectDeptListByRoleId" parameterType="Long" resultType="Integer">
		select d.c_dpt_cde, d.c_snr_dpt
		from t_department_sales d
            left join sys_role_dept rd on d.c_dpt_cde = rd.dept_id
        where rd.role_id = #{roleId}
        	and d.c_dpt_cde not in (select d.c_dpt_cde from t_department_sales d inner join sys_role_dept rd on d.c_dpt_cde = rd.dept_id and rd.role_id = #{roleId})
		order by d.c_snr_dpt
	</select>
    
    <select id="selectDeptById" parameterType="String" resultType="TdepartmentSales">
		select * from t_department_sales
		where c_dpt_cde = #{deptId}
	</select>
    
    <select id="checkDeptExistUser" parameterType="String" resultType="int">
		select count(1) from t_emp_cde_sales where c_dpt_cde = #{deptId}
	</select>
	
	<select id="hasChildByDeptId" parameterType="String" resultType="int">
		select count(1) from t_department_sales
		where  c_snr_dpt = #{deptId}
	</select>
	
	<select id="selectChildrenDeptById" parameterType="Long" resultMap="SysDeptResult">
		select * from sys_dept where find_in_set(#{deptId}, ancestors)
	</select>
	
	<select id="selectNormalChildrenDeptById" parameterType="String" resultType="int">
		select count(*) from t_department_sales where c_state = 1  and c_snr_dpt=#{deptId}
	</select>
	
	<select id="checkDeptNameUnique" resultType="com.bpic.common.core.domain.entity.TdepartmentSales">
	    select * from t_department_sales
		where c_dpt_cnm=#{c_dpt_cnm} and c_snr_dpt = #{c_snr_dpt}
	</select>
    
    <insert id="insertDept" parameterType="com.bpic.common.core.domain.entity.TdepartmentSales">
 		insert into t_department_sales(
 		<if test="c_dpt_cde != null and c_dpt_cde != 0">c_dpt_cde,</if>
		<if test="c_dpt_cnm != null and c_dpt_cnm != 0">c_dpt_cnm,</if>
		<if test="c_dpt_abr != null and c_dpt_abr != ''">c_dpt_cnm,</if>
		<if test="n_dpt_levl != null and n_dpt_levl != ''">n_dpt_levl,</if>
		<if test="c_snr_dpt != null and c_snr_dpt != ''">c_snr_dpt,</if>
		<if test="c_state != null and c_state != ''">c_state,</if>
		<if test="c_crt_cde != null and c_crt_cde != ''">c_crt_cde,</if>
		t_crt_tm
		)values(
		<if test="c_dpt_cde != null and c_dpt_cde != 0">#{c_dpt_cde},</if>
		<if test="c_dpt_cnm != null and c_dpt_cnm != 0">#{c_dpt_cnm},</if>
		<if test="c_dpt_abr != null and c_dpt_abr != ''">#{c_dpt_abr},</if>
		<if test="n_dpt_levl != null and n_dpt_levl != ''">#{n_dpt_levl},</if>
		<if test="c_snr_dpt != null and c_snr_dpt != ''">#{c_snr_dpt},</if>
		<if test="c_state != null and c_state != ''">#{c_state},</if>
		<if test="c_crt_cde != null and c_crt_cde != ''">#{c_crt_cde},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateDept" parameterType="com.bpic.common.core.domain.entity.TdepartmentSales">
 		update t_department_sales
 		<set>
 			<if test="c_dpt_cnm != null and c_dpt_cnm != ''">c_dpt_cnm = #{c_dpt_cnm},</if>
 			<if test="c_dpt_abr != null and c_dpt_abr != ''">c_dpt_abr = #{c_dpt_abr},</if>
 			<if test="n_dpt_levl != null and n_dpt_levl != ''">n_dpt_levl = #{n_dpt_levl},</if>
			<if test="c_snr_dpt != null and c_snr_dpt != ''">c_snr_dpt = #{c_snr_dpt},</if>
			<if test="c_state != null and c_state != ''">c_state = #{c_state},</if>
			<if test="c_crt_cde != null and c_crt_cde != ''">c_crt_cde = #{c_crt_cde},</if>
			t_upd_tm = sysdate()
 		</set>
 		where c_dpt_cde = #{c_dpt_cde}
	</update>
	
	<update id="updateDeptChildren" parameterType="java.util.List">
	    update sys_dept set ancestors =
	    <foreach collection="depts" item="item" index="index"
	        separator=" " open="case dept_id" close="end">
	        when #{item.deptId} then #{item.ancestors}
	    </foreach>
	    where dept_id in
	    <foreach collection="depts" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.deptId}
	    </foreach>
	</update>
	 
	 <update id="updateDeptStatus" parameterType="SysDept">
 	    update sys_dept
 	    <set>
 	        <if test="status != null and status != ''">status = #{status},</if>
 	        <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 	        update_time = sysdate()
        </set>
 	    where dept_id in (${ancestors})
	</update>
	
	<delete id="deleteDeptById" parameterType="Long">
		update t_department_sales set c_state = '0' where c_dpt_cde = #{deptId}
	</delete>

</mapper> 