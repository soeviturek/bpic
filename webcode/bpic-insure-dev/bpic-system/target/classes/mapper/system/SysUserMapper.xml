<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpic.system.mapper.SysUserMapper">

	<resultMap type="SysUser" id="SysUserResult">
		<id     property="userId"       column="user_id"      />
		<result property="deptId"       column="dept_id"      />
		<result property="userName"     column="user_name"    />
		<result property="nickName"     column="nick_name"    />
		<result property="email"        column="email"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="status"       column="status"       />
		<result property="delFlag"      column="del_flag"     />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
		<collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />
	</resultMap>
	<resultMap type="TempCdeSales" id="TempCdeSalesResult">
		<id     property="c_emp_cde"       column="c_emp_cde"      />
		<result property="c_upd_cde"       column="c_upd_cde"      />
		<result property="t_upd_tm"     column="t_upd_tm"    />
		<result property="t_crt_tm"     column="t_crt_tm"    />
		<result property="c_emp_cnm"        column="c_emp_cnm"  />
		<result property="c_dpt_cde"  column="c_dpt_cde"  />
		<result property="c_passwd"          column="c_passwd" />
		<result property="c_state"          column="c_state" />
		<result property="c_tel_mob"       column="c_tel_mob"  />
		<association property="dept"    column="c_dpt_cde" javaType="TdepartmentSales" resultMap="TdepartResult" />
		<collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />
	</resultMap>

	<resultMap id="TdepartResult" type="TdepartmentSales">
		<id     property="c_dpt_cde"   column="c_dpt_cde"     />
		<result property="c_snr_dpt" column="c_snr_dpt"   />
		<result property="c_dpt_cnm" column="c_dpt_cnm"   />
		<result property="c_state" column="c_state"   />
	</resultMap>

	<resultMap id="deptResult" type="SysDept">
		<id     property="deptId"   column="dept_id"     />
		<result property="parentId" column="parent_id"   />
		<result property="deptName" column="dept_name"   />
		<result property="orderNum" column="order_num"   />
		<result property="leader"   column="leader"      />
		<result property="status"   column="dept_status" />
	</resultMap>
	
	<resultMap id="RoleResult" type="SysRole">
		<id     property="roleId"       column="role_id"        />
		<result property="roleName"     column="role_name"      />
		<result property="roleKey"      column="role_key"       />
		<result property="roleSort"     column="role_sort"      />
		<result property="dataScope"     column="data_scope"    />
		<result property="status"       column="role_status"    />
	</resultMap>
	
	<sql id="selectUserVo">
        select u.c_emp_cde,u.c_upd_cde,u.t_upd_tm,u.t_crt_tm,u.c_emp_cnm,u.c_dpt_cde,u.c_passwd,u.c_state c_state,u.c_tel_mob,
        d.c_dpt_cde, d.c_snr_dpt, d.c_dpt_cnm,  d.c_state as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from t_emp_cde_sales u
		    left join t_department_sales d on u.c_dpt_cde = d.c_dpt_cde
		    left join sys_user_role ur on u.c_emp_cde = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
-- 		 	 left join sys_login_user l on l.c_tel_mob=u.c_tel_mob
    </sql>
    
    <select id="selectUserList" parameterType="SysUser" resultType="com.bpic.system.domain.vo.TempCdeSalesVo">
		SELECT tec.*,tds.c_dpt_cnm,tds.c_snr_dpt,tds.c_dpt_abr FROM t_emp_cde_sales tec
		LEFT JOIN t_department_sales tds ON tec.c_dpt_cde = tds.c_dpt_cde
		WHERE tec.c_state = '0'  and tec.c_dpt_cde in
		( select t.c_dpt_cde from t_department_sales t
			where t.c_state = '1'
		)
<!--		<if test="roleId != 1">-->
<!--			and tds.c_dpt_cde in (select s.dept_id from sys_role_dept s where s.role_id=#{roleId})-->
<!--		</if>-->
		<if test="userId != null and userId != ''">
			AND tec.c_emp_cde=#{userId}
		</if>
		<if test="userName != null and userName != ''">
			AND tec.c_emp_cnm like concat('%', #{userName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND tec.c_state = #{status}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND tec.c_tel_mob like concat('%', #{phonenumber}, '%')
		</if>
		<if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(tec.t_crt_tm,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
		</if>
		<if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
			AND date_format(tec.t_upd_tm,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
		</if>
		<choose>
			<when  test="list != null and list.size>0 ">
				AND tec.c_dpt_cde in
				<foreach collection="list" item="item" index="index"
					separator="," open="(" close=")">
				#{item,jdbcType=VARCHAR}
				</foreach>
			</when>
			<otherwise>
				<if test="deptId!=null and deptId !='' ">
					AND tec.c_dpt_cde = #{deptId}
				</if>
			</otherwise>
		</choose>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUserByUserName" parameterType="String" resultMap="TempCdeSalesResult">
	    <include refid="selectUserVo"/>
		where u.c_tel_mob = #{userName}
	</select>

	<select id="selectByTel" parameterType="String" resultType="com.bpic.common.core.domain.entity.SysLoginUser">
		select * from  login_user
		where u.c_tel_mob = #{userName}
	</select>
	<select id="selectUserById" parameterType="Long" resultType="com.bpic.system.domain.vo.TempCdeSalesVo">
		select tec.*,tds.c_dpt_abr from t_emp_cde_sales tec left join t_department_sales tds ON tec.c_dpt_cde = tds.c_dpt_cde
		where tec.c_emp_cde = #{userId}
	</select>
	
	<select id="checkUserNameUnique" parameterType="String" resultType="int">
		select count(1) from sys_user where user_name = #{userName}
	</select>
	
	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber = #{phonenumber}
	</select>
	
	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email}
	</select>

	<select id="selectOwmUser"  resultType="TempCdeSales">
		select c_emp_cde from t_emp_cde_sales
	</select>

	<select id="isAdmin" parameterType="Long" resultType="Long">
		select role_id from sys_user_role  where user_id = #{c_emp_cde}
	</select>
	<select id="selectRoleKey" parameterType="Long" resultType="String">
		SELECT r.role_key FROM sys_user_role s LEFT JOIN sys_role r ON r.role_id=s.role_id WHERE s.user_id =#{c_emp_cde}
	</select>
	<insert id="insertUser" parameterType="TempCdeSales" useGeneratedKeys="true" keyProperty="c_emp_cde">
 		insert into t_emp_cde_sales(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="nickName != null and nickName != ''">nick_name,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="nickName != null and nickName != ''">#{nickName},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateUser" parameterType="TempCdeSales">
 		update t_emp_cde_sales
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
 			<if test="email != null and email != ''">email = #{email},</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			update_time = sysdate()
 		</set>
 		where c_emp_cde = #{userId}
	</update>
	
	<update id="updateUserStatus" parameterType="SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>
	
	<update id="updateUserAvatar" parameterType="SysUser">
 		update sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>
	
	<update id="resetUserPwd" parameterType="SysUser">
 		update sys_login_user set c_passwd = #{password} where c_tel_mob = #{userName}
	</update>
	
	<delete id="deleteUserById" parameterType="String">
 		delete from sys_user where user_id = #{userId}
 	</delete>
 	
 	<delete id="deleteUserByIds" parameterType="String">
 		update sys_user set del_flag = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>

	<!-- 手机号登录校验-->
	<select id="selectUserByPhone" parameterType="String" resultType="com.bpic.common.core.domain.entity.TempCdeSales">
		select c_emp_cde,c_upd_cde,t_upd_tm,t_crt_tm,c_emp_cnm,c_dpt_cde,c_passwd,c_state,c_tel_mob
		 from t_emp_cde_sales where c_tel_mob = #{cellphone}
	</select>
	<!--手机密码登录-->
	<select id="selectUserByPhoneAndPwd" parameterType="com.bpic.common.core.domain.entity.TempCdeSales" resultType="com.bpic.common.core.domain.entity.TempCdeSales">
		select c_emp_cde,c_upd_cde,t_upd_tm,t_crt_tm,c_emp_cnm,c_dpt_cde,c_passwd,c_state,c_tel_mob
		 from t_emp_cde_sales where c_tel_mob = #{c_tel_mob} and c_passwd = #{c_passwd}
	</select>
	<!--忘记密码-->
	<update id="updatePwd" parameterType="com.bpic.common.core.domain.entity.TempCdeSales">
 		update t_emp_cde_sales set c_passwd = #{c_passwd} where c_tel_mob = #{c_tel_mob}
	</update>

	<insert id="registerByCellphone" parameterType="com.bpic.common.core.domain.entity.TempCdeSales">
		insert into t_emp_cde_sales(c_emp_cde,c_emp_cnm,c_tel_mob,c_passwd) values (#{c_emp_cde},#{c_emp_cnm},#{c_tel_mob},#{c_passwd})
	</insert>

	<select id="selectUserRole" parameterType="String" resultType="com.bpic.system.domain.SysUserRole">
		select user_id userId,role_id roleId from sys_user_role where user_id=#{c_emp_cde}
	</select>

	<delete id="deleteUserRoleByUser" parameterType="String">
		delete from sys_user_role where user_id=#{c_emp_cde}
	</delete>

	<insert id="bindRole" parameterType="TempCdeSales">
	insert into sys_user_role(user_id,role_id)  values
		<foreach collection="roleIds" item="roleId" separator="," >
			(#{c_emp_cde},#{roleId})
		</foreach>
	</insert>


	<select id="getUserRole" parameterType="TempCdeSales" resultType="Long">
		select role_id from sys_user_role where user_id=#{c_emp_cde}
	</select>

	<select id="selectByList" parameterType="list" resultType="TempCdeSalesVo">
		select * from t_emp_cde_sales tec LEFT JOIN t_department_sales tds ON tec.c_dpt_cde = tds.c_dpt_cde  where  tec.c_state='0' and
		 tec.c_dpt_cde IN
		( SELECT t.c_dpt_cde FROM t_department_sales t
		WHERE t.c_state = '1') AND tec.c_dpt_cde in
		<foreach item="userId" collection="list" open="(" separator="," close=")" >
			#{userId}
		</foreach>


	</select>

	<select id="selectByUserList" parameterType="list" resultType="TempCdeSalesVo">
		select * from t_emp_cde_sales t where  t.c_state='0' and t.c_emp_cde in
		<foreach item="userId" collection="list" open="(" separator="," close=")" >
			#{userId}
		</foreach>

	</select>
</mapper> 